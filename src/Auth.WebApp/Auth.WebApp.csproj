<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp2.2</TargetFramework>
        <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        
        <PackageReference Include="IdentityServer4" Version="2.4.0" />
        
        <PackageReference Include="IdentityServer4.AspNetIdentity" Version="2.4.0" />
        
        <PackageReference Include="IdentityServer4.EntityFramework" Version="2.4.0" />
        
        <PackageReference Include="Microsoft.AspNetCore.App" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Api.Analyzers" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
        <PackageReference Include="NSwag.AspNetCore" Version="12.0.13" />
        
        <!-- Serilog Config -->
        <PackageReference Include="Serilog.AspNetCore" Version="2.1.1" />
        <PackageReference Include="Serilog.Enrichers.Demystify" Version="0.1.0-dev-00016" />
        <PackageReference Include="Serilog.Settings.Configuration" Version="3.0.1" />
        <PackageReference Include="Serilog.Sinks.Async" Version="1.3.0" />
        <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
        <PackageReference Include="Serilog.Sinks.File" Version="4.0.0" />

        <!-- MediatR, AutoMapper, FluentValidation- -->
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="6.0.0" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="8.2.2" />
        <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="6.0.1" />
        
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="2.2.0" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\Auth.Application\Auth.Application.csproj" />
      <ProjectReference Include="..\Auth.Persistence\Auth.Persistence.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="Logs" />
    </ItemGroup>
    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
    
</Project>
